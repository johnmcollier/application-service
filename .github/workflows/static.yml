name: static checks
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  gofmt:
    name: Ensure that code is gofmt-ed
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: "Ensure 'application-service' is 'go fmt'-ed - run 'make fmt' to fix"
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: fmt
        comment: false

  gosec:
    name: Ensure that code passes gosec and golint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Golang
      uses: actions/setup-go@v2
      with:
        go-version: '1.16.4'
    - name: "Install gosec"
      run: |
        go get -u github.com/securego/gosec/v2/cmd/gosec
    - name: "Ensure 'application-service' passes 'go-sec' - run 'make gosec' to identify issues"
      run: |
        make gosec
    - name: "Ensure 'application-service' passes 'go-lint' - run 'make lint' to identify issues"
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.40.1
        make lint

  check-go:
    name: Ensure Go modules synchronicity
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.4'
      - name: "Download all Go modules"
        run: |
          go mod download
      - name: "Check for tidyness of go.mod and go.sum: run `go mod tidy` to fix"
        run: |
          go mod tidy
          git diff --exit-code -- .

  test-go:
    name: Run unit tests for Go packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.4'
      - name: "Run backend tests"
        run: |
          make test